global
	log /dev/log	local0
	log /dev/log	local1 notice
	stats timeout 30s
    

defaults
	log	global
	mode	http
	option	httplog
	option	dontlognull
        timeout connect 5000
        timeout client  50000
        timeout server  50000
	# errorfile 400 /etc/haproxy/errors/400.http
	# errorfile 403 /etc/haproxy/errors/403.http
	# errorfile 408 /etc/haproxy/errors/408.http
	# errorfile 500 /etc/haproxy/errors/500.http
	# errorfile 502 /etc/haproxy/errors/502.http
	# errorfile 503 /etc/haproxy/errors/503.http
	# errorfile 504 /etc/haproxy/errors/504.http


frontend http-in
    bind *:80
    
     # Add CORS headers when Origin header is present
        capture request header origin len 128
        http-response set-header Access-Control-Allow-Origin *
        http-response set-header Access-Control-Allow-Methods GET,\ HEAD,\ OPTIONS,\ POST,\ PUT
        http-response set-header Access-Control-Allow-Credentials true
        http-response set-header Access-Control-Allow-Headers X-Stream-Output,\ X-Chunked-Output,\ X-Content-Length,\ Accept,\ Authorization
        http-response set-header Access-Control-Expose-Headers X-Stream-Output,\ X-Chunked-Output,\ X-Content-Length

    mode http

    #acl is_operandi hdr(host) -i operandi.ocr-d.de 

    # listening http://localhost/server (port 80)
    acl is_operandi hdr(host) -i localhost
    acl is_operandibackend1 path -i -m beg /server
    acl is_operandibackend2 path -i -m beg /broker

    #use_backend operndibackenserver if is_operandi is_operandibackend1 || is_operandi is_operandibackend2
    use_backend operndiserver if is_operandi is_operandibackend1 
    use_backend operndibroker if is_operandi is_operandibackend2
    
# backend operndibackenserver
#         mode http
#         server operandi web:1323 check

backend operndiserver
        mode http
        server operandi web:1323 check
        
backend operndibroker
        mode http
        server operandi web:1323 check
        



# # simple config:  frontend (myfrontend) -> backen (webservers)
# frontend myfrontend
#   bind :80
#   default_backend webservers
#
# backend webservers
#   server s1 web:1323 check
#   #server s2 web2:8080 check
#   #server s3 web3:8080 check

